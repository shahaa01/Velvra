<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Velvra Admin - User Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');
        
        * {
            font-family: 'Inter', sans-serif;
        }
        
        .sidebar-link {
            transition: all 0.3s ease;
        }
        
        .sidebar-link:hover {
            transform: translateX(5px);
        }
        
        .table-row-hover:hover {
            background-color: #f9fafb;
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            animation: fadeIn 0.3s ease;
        }
        
        .modal.show {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .modal-content {
            animation: slideUp 0.3s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .status-badge {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 500;
        }
        
        .filter-chip {
            transition: all 0.2s ease;
        }
        
        .filter-chip:hover {
            transform: scale(1.05);
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Sidebar -->
    <%- include('adminSidebar.ejs') %>

    <!-- Main Content -->
    <div class="lg:ml-64">
        <!-- Header -->
        <header class="bg-white shadow-sm border-b border-gray-200">
            <div class="flex items-center justify-between px-6 py-4">
                <button id="sidebarToggle" class="lg:hidden">
                    <i class="fas fa-bars text-gray-600"></i>
                </button>
                
                <div class="flex items-center space-x-4">
                    <div class="relative">
                        <input type="search" id="searchInput" placeholder="Search users..." class="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-purple-500 w-64">
                        <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
                    </div>
                </div>
                
                <div class="flex items-center space-x-4">
                    <button class="relative">
                        <i class="fas fa-bell text-gray-600"></i>
                        <span class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">3</span>
                    </button>
                    <div class="flex items-center space-x-2">
                        <img src="https://ui-avatars.com/api/?name=Admin+User&background=7c3aed&color=fff" alt="Admin" class="w-8 h-8 rounded-full">
                        <span class="text-sm font-medium">Admin User</span>
                    </div>
                </div>
            </div>
        </header>

        <!-- User Management Content -->
        <main class="p-6">
            <!-- Page Title and Actions -->
            <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-8">
                <div>
                    <h2 class="text-3xl font-bold text-gray-800">User Management</h2>
                    <p class="text-gray-600 mt-1">Manage and monitor all registered users</p>
                </div>
                <div class="mt-4 md:mt-0 flex space-x-3">
                    <button class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors flex items-center">
                        <i class="fas fa-download mr-2"></i>
                        Export
                    </button>
                    <button class="bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300 transition-colors flex items-center">
                        <i class="fas fa-filter mr-2"></i>
                        Filter
                    </button>
                </div>
            </div>

            <!-- Stats Cards -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                <div class="bg-white p-4 rounded-lg border border-gray-200">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-600 text-sm">Total Users</p>
                            <p class="text-2xl font-bold text-gray-800"><%= totalUsers %></p>
                        </div>
                        <div class="bg-blue-100 p-3 rounded-lg">
                            <i class="fas fa-users text-blue-600"></i>
                        </div>
                    </div>
                </div>
                <div class="bg-white p-4 rounded-lg border border-gray-200">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-600 text-sm">Active Users</p>
                            <p class="text-2xl font-bold text-gray-800"><%= activeUsers %></p>
                        </div>
                        <div class="bg-green-100 p-3 rounded-lg">
                            <i class="fas fa-user-check text-green-600"></i>
                        </div>
                    </div>
                </div>
                <div class="bg-white p-4 rounded-lg border border-gray-200">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-600 text-sm">Suspended</p>
                            <p class="text-2xl font-bold text-gray-800"><%= suspendedUsers %></p>
                        </div>
                        <div class="bg-yellow-100 p-3 rounded-lg">
                            <i class="fas fa-user-slash text-yellow-600"></i>
                        </div>
                    </div>
                </div>
                <div class="bg-white p-4 rounded-lg border border-gray-200">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-600 text-sm">Banned</p>
                            <p class="text-2xl font-bold text-gray-800"><%= bannedUsers %></p>
                        </div>
                        <div class="bg-red-100 p-3 rounded-lg">
                            <i class="fas fa-ban text-red-600"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Filter Chips -->
            <div class="flex flex-wrap gap-2 mb-6">
                <button class="filter-chip bg-purple-600 text-white px-4 py-2 rounded-full text-sm font-medium" data-filter="all">
                    All Users
                </button>
                <button class="filter-chip bg-gray-200 text-gray-700 px-4 py-2 rounded-full text-sm font-medium hover:bg-gray-300" data-filter="active">
                    Active
                </button>
                <button class="filter-chip bg-gray-200 text-gray-700 px-4 py-2 rounded-full text-sm font-medium hover:bg-gray-300" data-filter="suspended">
                    Suspended
                </button>
                <button class="filter-chip bg-gray-200 text-gray-700 px-4 py-2 rounded-full text-sm font-medium hover:bg-gray-300" data-filter="banned">
                    Banned
                </button>
                <button class="filter-chip bg-gray-200 text-gray-700 px-4 py-2 rounded-full text-sm font-medium hover:bg-gray-300" data-filter="verified">
                    Verified
                </button>
            </div>

            <!-- Users Table -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead class="bg-gray-50 border-b border-gray-200">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    <input type="checkbox" class="rounded border-gray-300">
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Joined</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Orders</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Spent</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200" id="usersTableBody">
                            <!-- Table rows will be populated by JavaScript -->
                        </tbody>
                    </table>
                </div>
                
                <!-- Pagination -->
                <div class="bg-gray-50 px-6 py-3 flex items-center justify-between border-t border-gray-200">
                    <div class="text-sm text-gray-700">
                        Showing <span class="font-medium"><%= (currentPage - 1) * 20 + 1 %></span> to <span class="font-medium"><%= Math.min(currentPage * 20, totalUsers) %></span> of <span class="font-medium"><%= totalUsers %></span> results
                    </div>
                    <div class="flex space-x-2">
                        <% if (currentPage > 1) { %>
                            <a href="/admin/users?page=<%= currentPage - 1 %>" class="px-3 py-1 border border-gray-300 rounded-md text-sm hover:bg-gray-100">Previous</a>
                        <% } %>
                        
                        <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                            <% if (i === currentPage) { %>
                                <span class="px-3 py-1 bg-purple-600 text-white rounded-md text-sm"><%= i %></span>
                            <% } else { %>
                                <a href="/admin/users?page=<%= i %>" class="px-3 py-1 border border-gray-300 rounded-md text-sm hover:bg-gray-100"><%= i %></a>
                            <% } %>
                        <% } %>
                        
                        <% if (currentPage < totalPages) { %>
                            <a href="/admin/users?page=<%= currentPage + 1 %>" class="px-3 py-1 border border-gray-300 rounded-md text-sm hover:bg-gray-100">Next</a>
                        <% } %>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- User Detail Modal -->
    <div id="userModal" class="modal">
        <div class="modal-content bg-white rounded-xl shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div class="p-6 border-b border-gray-200">
                <div class="flex items-center justify-between">
                    <h3 class="text-xl font-semibold text-gray-800">User Details</h3>
                    <button onclick="closeModal()" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
            </div>
            <div class="p-6">
                <div id="modalContent">
                    <!-- Modal content will be inserted here -->
                </div>
            </div>
        </div>
    </div>

    <script>
        // Real user data from server
        const users = <%- JSON.stringify(users) %>;
        let currentFilter = 'all';
        let filteredUsers = [...users];

        // Initialize table
        function renderTable() {
            const tbody = document.getElementById('usersTableBody');
            tbody.innerHTML = '';

            filteredUsers.forEach(user => {
                const row = document.createElement('tr');
                row.className = 'table-row-hover';
                row.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap">
                        <input type="checkbox" class="rounded border-gray-300">
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <img class="h-10 w-10 rounded-full" 
                                 src="https://ui-avatars.com/api/?name=${encodeURIComponent(user.firstName + ' ' + (user.lastName || ''))}&background=random" 
                                 alt="${user.firstName}">
                            <div class="ml-3">
                                <div class="text-sm font-medium text-gray-900">
                                    ${user.firstName} ${user.lastName || ''}
                                </div>
                                <div class="text-sm text-gray-500">ID: #${user._id.slice(-6).toUpperCase()}</div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">${user.email}</div>
                        ${user.verified ? '<div class="text-xs text-green-600"><i class="fas fa-check-circle"></i> Verified</div>' : ''}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        ${getStatusBadge(user.status)}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        ${new Date(user.createdAt).toLocaleDateString()}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${user.orderCount || 0}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        $${(user.totalSpent || 0).toFixed(2)}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm">
                        <button onclick="viewUser('${user._id}')" class="text-purple-600 hover:text-purple-900 mr-3">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button onclick="editUser('${user._id}')" class="text-blue-600 hover:text-blue-900 mr-3">
                            <i class="fas fa-edit"></i>
                        </button>
                        ${user.status === 'active' ? 
                            `<button onclick="suspendUser('${user._id}')" class="text-yellow-600 hover:text-yellow-900">
                                <i class="fas fa-pause"></i>
                            </button>` :
                            `<button onclick="activateUser('${user._id}')" class="text-green-600 hover:text-green-900">
                                <i class="fas fa-play"></i>
                            </button>`
                        }
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function getStatusBadge(status) {
            const badges = {
                active: '<span class="status-badge bg-green-100 text-green-800">Active</span>',
                suspended: '<span class="status-badge bg-yellow-100 text-yellow-800">Suspended</span>',
                banned: '<span class="status-badge bg-red-100 text-red-800">Banned</span>'
            };
            return badges[status] || '<span class="status-badge bg-green-100 text-green-800">Active</span>';
        }

        // Filter functions
        document.querySelectorAll('.filter-chip').forEach(chip => {
            chip.addEventListener('click', function() {
                // Update active state
                document.querySelectorAll('.filter-chip').forEach(c => {
                    c.classList.remove('bg-purple-600', 'text-white');
                    c.classList.add('bg-gray-200', 'text-gray-700');
                });
                this.classList.remove('bg-gray-200', 'text-gray-700');
                this.classList.add('bg-purple-600', 'text-white');

                // Filter users
                const filter = this.dataset.filter;
                if (filter === 'all') {
                    filteredUsers = [...users];
                } else if (filter === 'verified') {
                    filteredUsers = users.filter(u => u.verified);
                } else {
                    filteredUsers = users.filter(u => u.status === filter);
                }
                renderTable();
            });
        });

        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const search = e.target.value.toLowerCase();
            filteredUsers = users.filter(user => 
                (user.firstName + ' ' + (user.lastName || '')).toLowerCase().includes(search) ||
                user.email.toLowerCase().includes(search)
            );
            renderTable();
        });

        // User actions
        function viewUser(id) {
            const user = users.find(u => u._id === id);
            if (!user) return;
            
            const modalContent = document.getElementById('modalContent');
            const address = user.defaultAddress || {};
            
            modalContent.innerHTML = `
                <div class="flex items-center mb-6">
                    <img src="https://ui-avatars.com/api/?name=${encodeURIComponent(user.firstName + ' ' + (user.lastName || ''))}&background=random" 
                         alt="${user.firstName}" class="w-20 h-20 rounded-full">
                    <div class="ml-4">
                        <h4 class="text-xl font-semibold text-gray-800">${user.firstName} ${user.lastName || ''}</h4>
                        <p class="text-gray-600">${user.email}</p>
                        ${getStatusBadge(user.status)}
                    </div>
                </div>
                
                <div class="grid grid-cols-2 gap-4 mb-6">
                    <div>
                        <p class="text-sm text-gray-600">User ID</p>
                        <p class="font-medium">#${user._id.slice(-6).toUpperCase()}</p>
                    </div>
                    <div>
                        <p class="text-sm text-gray-600">Joined Date</p>
                        <p class="font-medium">${new Date(user.createdAt).toLocaleDateString()}</p>
                    </div>
                    <div>
                        <p class="text-sm text-gray-600">Phone</p>
                        <p class="font-medium">${address.phone || 'Not provided'}</p>
                    </div>
                    <div>
                        <p class="text-sm text-gray-600">Total Orders</p>
                        <p class="font-medium">${user.orderCount || 0}</p>
                    </div>
                    <div>
                        <p class="text-sm text-gray-600">Total Spent</p>
                        <p class="font-medium">$${(user.totalSpent || 0).toFixed(2)}</p>
                    </div>
                    <div>
                        <p class="text-sm text-gray-600">Cart Total</p>
                        <p class="font-medium">$${(user.cartTotal || 0).toFixed(2)}</p>
                    </div>
                    <div>
                        <p class="text-sm text-gray-600">Verification</p>
                        <p class="font-medium">${user.verified ? '<i class="fas fa-check-circle text-green-600"></i> Verified' : '<i class="fas fa-times-circle text-red-600"></i> Not Verified'}</p>
                    </div>
                    <div>
                        <p class="text-sm text-gray-600">Auth Method</p>
                        <p class="font-medium">${user.authMethod || 'local'}</p>
                    </div>
                </div>
                
                <div class="mb-6">
                    <p class="text-sm text-gray-600 mb-2">Address</p>
                    <p class="font-medium">${address.street ? `${address.street}, ${address.city}, ${address.state} ${address.postalCode}` : 'No address provided'}</p>
                </div>
                
                <div class="flex space-x-3">
                    <button class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700">
                        <i class="fas fa-envelope mr-2"></i>Send Email
                    </button>
                    <button class="bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300">
                        <i class="fas fa-history mr-2"></i>View Orders
                    </button>
                </div>
            `;
            showModal();
        }

        function editUser(id) {
            alert('Edit user functionality will be implemented');
        }

        function suspendUser(id) {
            if (confirm('Are you sure you want to suspend this user?')) {
                // This would typically make an API call to update the user status
                alert('User suspension functionality will be implemented');
            }
        }

        function activateUser(id) {
            if (confirm('Are you sure you want to activate this user?')) {
                // This would typically make an API call to update the user status
                alert('User activation functionality will be implemented');
            }
        }

        // Modal functions
        function showModal() {
            document.getElementById('userModal').classList.add('show');
        }

        function closeModal() {
            document.getElementById('userModal').classList.remove('show');
        }

        // Sidebar toggle
        document.getElementById('sidebarToggle').addEventListener('click', function() {
            document.getElementById('sidebar').classList.toggle('-translate-x-full');
        });

        // Initialize
        renderTable();
    </script>
</body>
</html>