<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Velvra Admin - Inventory & Stock Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.0/chart.umd.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');
        
        * {
            font-family: 'Inter', sans-serif;
        }
        
        .sidebar-link {
            transition: all 0.3s ease;
        }
        
        .sidebar-link:hover {
            transform: translateX(5px);
        }
        
        .inventory-card {
            transition: all 0.3s ease;
        }
        
        .inventory-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        }
        
        .stock-level-bar {
            transition: width 0.5s ease;
        }
        
        .alert-pulse {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% {
                opacity: 1;
            }
            50% {
                opacity: 0.5;
            }
            100% {
                opacity: 1;
            }
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            animation: fadeIn 0.3s ease;
        }
        
        .modal.show {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .modal-content {
            animation: slideUp 0.3s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .status-badge {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 500;
        }
        
        .stock-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            display: inline-block;
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Sidebar -->
    <%- include('adminSidebar.ejs') %>

    <!-- Main Content -->
    <div class="lg:ml-64">
        <!-- Header -->
        <header class="bg-white shadow-sm border-b border-gray-200">
            <div class="flex items-center justify-between px-6 py-4">
                <button id="sidebarToggle" class="lg:hidden">
                    <i class="fas fa-bars text-gray-600"></i>
                </button>
                
                <div class="flex items-center space-x-4">
                    <div class="relative">
                        <input type="search" id="searchInput" placeholder="Search inventory..." class="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-purple-500 w-64">
                        <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
                    </div>
                </div>
                
                <div class="flex items-center space-x-4">
                    <button class="relative">
                        <i class="fas fa-bell text-gray-600"></i>
                        <span class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center alert-pulse">5</span>
                    </button>
                    <div class="flex items-center space-x-2">
                        <img src="https://ui-avatars.com/api/?name=Admin+User&background=7c3aed&color=fff" alt="Admin" class="w-8 h-8 rounded-full">
                        <span class="text-sm font-medium">Admin User</span>
                    </div>
                </div>
            </div>
        </header>

        <!-- Inventory Management Content -->
        <main class="p-6">
            <!-- Page Title and Actions -->
            <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-8">
                <div>
                    <h2 class="text-3xl font-bold text-gray-800">Inventory & Stock Management</h2>
                    <p class="text-gray-600 mt-1">Monitor stock levels and manage inventory alerts</p>
                </div>
                <div class="mt-4 md:mt-0 flex space-x-3">
                    <button class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors flex items-center">
                        <i class="fas fa-file-export mr-2"></i>
                        Export Report
                    </button>
                    <button class="bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300 transition-colors flex items-center">
                        <i class="fas fa-cog mr-2"></i>
                        Settings
                    </button>
                </div>
            </div>

            <!-- Alert Banner -->
            <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6 flex items-center justify-between">
                <div class="flex items-center">
                    <i class="fas fa-exclamation-triangle text-red-600 mr-3"></i>
                    <div>
                        <p class="font-semibold text-red-900">Critical Stock Alert!</p>
                        <p class="text-sm text-red-700">23 products are out of stock and 45 products have low stock levels</p>
                    </div>
                </div>
                <button class="text-red-600 hover:text-red-700 font-medium text-sm">View All Alerts</button>
            </div>

            <!-- Stats Cards -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                <div class="bg-white p-4 rounded-lg border border-gray-200">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-600 text-sm">Total SKUs</p>
                            <p class="text-2xl font-bold text-gray-800">1,234</p>
                            <p class="text-xs text-gray-500 mt-1">Across all categories</p>
                        </div>
                        <div class="bg-blue-100 p-3 rounded-lg">
                            <i class="fas fa-boxes text-blue-600"></i>
                        </div>
                    </div>
                </div>
                <div class="bg-white p-4 rounded-lg border border-gray-200">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-600 text-sm">Out of Stock</p>
                            <p class="text-2xl font-bold text-red-600">23</p>
                            <p class="text-xs text-gray-500 mt-1">Immediate attention</p>
                        </div>
                        <div class="bg-red-100 p-3 rounded-lg">
                            <i class="fas fa-exclamation-circle text-red-600"></i>
                        </div>
                    </div>
                </div>
                <div class="bg-white p-4 rounded-lg border border-gray-200">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-600 text-sm">Low Stock</p>
                            <p class="text-2xl font-bold text-yellow-600">45</p>
                            <p class="text-xs text-gray-500 mt-1">Below threshold</p>
                        </div>
                        <div class="bg-yellow-100 p-3 rounded-lg">
                            <i class="fas fa-exclamation-triangle text-yellow-600"></i>
                        </div>
                    </div>
                </div>
                <div class="bg-white p-4 rounded-lg border border-gray-200">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-600 text-sm">Backordered</p>
                            <p class="text-2xl font-bold text-orange-600">12</p>
                            <p class="text-xs text-gray-500 mt-1">Awaiting restock</p>
                        </div>
                        <div class="bg-orange-100 p-3 rounded-lg">
                            <i class="fas fa-truck-loading text-orange-600"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Stock Overview Chart -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
                <div class="lg:col-span-2 bg-white rounded-xl p-6 shadow-sm border border-gray-200">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-lg font-semibold text-gray-800">Stock Levels by Category</h3>
                        <select class="text-sm border border-gray-300 rounded-lg px-3 py-1">
                            <option>All Categories</option>
                            <option>Women's Fashion</option>
                            <option>Men's Fashion</option>
                            <option>Kids</option>
                            <option>Accessories</option>
                        </select>
                    </div>
                    <div class="h-64">
                        <canvas id="stockChart"></canvas>
                    </div>
                </div>
                
                <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-200">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">Stock Health</h3>
                    <div class="space-y-4">
                        <div>
                            <div class="flex items-center justify-between mb-1">
                                <span class="text-sm text-gray-600">Healthy Stock</span>
                                <span class="text-sm font-medium">78%</span>
                            </div>
                            <div class="bg-gray-200 rounded-full h-2">
                                <div class="bg-green-500 h-2 rounded-full" style="width: 78%"></div>
                            </div>
                        </div>
                        <div>
                            <div class="flex items-center justify-between mb-1">
                                <span class="text-sm text-gray-600">Low Stock</span>
                                <span class="text-sm font-medium">15%</span>
                            </div>
                            <div class="bg-gray-200 rounded-full h-2">
                                <div class="bg-yellow-500 h-2 rounded-full" style="width: 15%"></div>
                            </div>
                        </div>
                        <div>
                            <div class="flex items-center justify-between mb-1">
                                <span class="text-sm text-gray-600">Out of Stock</span>
                                <span class="text-sm font-medium">7%</span>
                            </div>
                            <div class="bg-gray-200 rounded-full h-2">
                                <div class="bg-red-500 h-2 rounded-full" style="width: 7%"></div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-6 p-4 bg-blue-50 rounded-lg">
                        <p class="text-sm font-medium text-blue-900">Stock Value</p>
                        <p class="text-2xl font-bold text-blue-900 mt-1">$456,789</p>
                        <p class="text-xs text-blue-700 mt-1">Total inventory value</p>
                    </div>
                </div>
            </div>

            <!-- Filter Tabs -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 mb-6">
                <div class="flex flex-wrap border-b border-gray-200">
                    <button class="px-6 py-3 text-sm font-medium text-purple-600 border-b-2 border-purple-600" data-tab="all">
                        All Items
                    </button>
                    <button class="px-6 py-3 text-sm font-medium text-gray-600 hover:text-gray-800" data-tab="critical">
                        Critical Stock
                    </button>
                    <button class="px-6 py-3 text-sm font-medium text-gray-600 hover:text-gray-800" data-tab="low">
                        Low Stock
                    </button>
                    <button class="px-6 py-3 text-sm font-medium text-gray-600 hover:text-gray-800" data-tab="backorder">
                        Backordered
                    </button>
                    <button class="px-6 py-3 text-sm font-medium text-gray-600 hover:text-gray-800" data-tab="overstock">
                        Overstock
                    </button>
                </div>
            </div>

            <!-- Inventory Table -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead class="bg-gray-50 border-b border-gray-200">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Product</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">SKU</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Seller</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Stock Level</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Restock</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="inventoryTableBody" class="bg-white divide-y divide-gray-200">
                            <!-- Table rows will be inserted here by JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </div>

    <!-- Stock Update Modal -->
    <div id="stockModal" class="modal">
        <div class="modal-content bg-white rounded-xl shadow-xl max-w-lg w-full mx-4">
            <div class="p-6 border-b border-gray-200">
                <div class="flex items-center justify-between">
                    <h3 class="text-xl font-semibold text-gray-800">Update Stock</h3>
                    <button onclick="closeModal()" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
            </div>
            <div class="p-6">
                <div id="modalContent">
                    <!-- Modal content will be inserted here -->
                </div>
            </div>
        </div>
    </div>

    <script>
        // Mock inventory data
        const mockInventory = [
            {
                id: 1,
                name: 'Premium Leather Jacket',
                sku: 'PLJ-001',
                seller: 'Fashion Hub',
                category: 'Men\'s Fashion',
                currentStock: 0,
                minStock: 10,
                maxStock: 100,
                status: 'critical',
                lastRestock: '2024-03-01',
                price: 299.99,
                image: 'https://images.unsplash.com/photo-1551028719-00167b16eac5?w=50'
            },
            {
                id: 4,
                name: 'Luxury Watch',
                sku: 'LUX-789',
                seller: 'Premium Styles',
                category: 'Accessories',
                currentStock: 150,
                minStock: 20,
                maxStock: 100,
                status: 'overstock',
                lastRestock: '2024-03-10',
                price: 599.99,
                image: 'https://images.unsplash.com/photo-1524805444758-089113d48a6d?w=50'
            },
            {
                id: 5,
                name: 'Canvas Backpack',
                sku: 'CBP-456',
                seller: 'Trendy Boutique',
                category: 'Accessories',
                currentStock: 0,
                minStock: 30,
                maxStock: 150,
                status: 'backorder',
                lastRestock: '2024-02-28',
                price: 49.99,
                image: 'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?w=50',
                backorderDate: '2024-03-25'
            }
        ];

        let currentTab = 'all';
        let filteredInventory = [...mockInventory];

        // Render inventory table
        function renderInventoryTable() {
            const tbody = document.getElementById('inventoryTableBody');
            tbody.innerHTML = '';

            filteredInventory.forEach(item => {
                const row = document.createElement('tr');
                row.className = 'hover:bg-gray-50';
                
                const stockPercentage = (item.currentStock / item.maxStock) * 100;
                
                row.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <img src="${item.image}" alt="${item.name}" class="w-10 h-10 rounded-lg object-cover mr-3">
                            <div>
                                <div class="text-sm font-medium text-gray-900">${item.name}</div>
                                <div class="text-sm text-gray-500">${item.price}</div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${item.sku}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${item.seller}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${item.category}</td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="w-32">
                            <div class="flex items-center justify-between text-sm mb-1">
                                <span class="font-medium">${item.currentStock}</span>
                                <span class="text-gray-500">/ ${item.maxStock}</span>
                            </div>
                            <div class="bg-gray-200 rounded-full h-2">
                                <div class="stock-level-bar h-2 rounded-full ${
                                    item.status === 'critical' ? 'bg-red-500' :
                                    item.status === 'low' ? 'bg-yellow-500' :
                                    item.status === 'overstock' ? 'bg-purple-500' :
                                    'bg-green-500'
                                }" style="width: ${Math.min(stockPercentage, 100)}%"></div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        ${getStatusBadge(item.status)}
                        ${item.backorderDate ? `<p class="text-xs text-gray-500 mt-1">Expected: ${new Date(item.backorderDate).toLocaleDateString()}</p>` : ''}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        ${new Date(item.lastRestock).toLocaleDateString()}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm">
                        <button onclick="updateStock(${item.id})" class="text-purple-600 hover:text-purple-900 mr-3">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button onclick="viewHistory(${item.id})" class="text-blue-600 hover:text-blue-900 mr-3">
                            <i class="fas fa-history"></i>
                        </button>
                        ${item.status === 'critical' || item.status === 'low' ? `
                            <button onclick="reorderStock(${item.id})" class="text-green-600 hover:text-green-900">
                                <i class="fas fa-cart-plus"></i>
                            </button>
                        ` : ''}
                    </td>
                `;
                
                tbody.appendChild(row);
            });
        }

        function getStatusBadge(status) {
            const badges = {
                critical: '<span class="status-badge bg-red-100 text-red-800"><i class="fas fa-exclamation-circle mr-1"></i>Out of Stock</span>',
                low: '<span class="status-badge bg-yellow-100 text-yellow-800"><i class="fas fa-exclamation-triangle mr-1"></i>Low Stock</span>',
                healthy: '<span class="status-badge bg-green-100 text-green-800"><i class="fas fa-check-circle mr-1"></i>In Stock</span>',
                overstock: '<span class="status-badge bg-purple-100 text-purple-800"><i class="fas fa-boxes mr-1"></i>Overstock</span>',
                backorder: '<span class="status-badge bg-orange-100 text-orange-800"><i class="fas fa-truck-loading mr-1"></i>Backordered</span>'
            };
            return badges[status] || '';
        }

        // Tab switching
        document.querySelectorAll('[data-tab]').forEach(tab => {
            tab.addEventListener('click', function() {
                // Update active tab styling
                document.querySelectorAll('[data-tab]').forEach(t => {
                    t.classList.remove('text-purple-600', 'border-b-2', 'border-purple-600');
                    t.classList.add('text-gray-600');
                });
                this.classList.remove('text-gray-600');
                this.classList.add('text-purple-600', 'border-b-2', 'border-purple-600');
                
                // Filter inventory
                const tabName = this.dataset.tab;
                if (tabName === 'all') {
                    filteredInventory = [...mockInventory];
                } else {
                    filteredInventory = mockInventory.filter(item => item.status === tabName);
                }
                renderInventoryTable();
            });
        });

        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const search = e.target.value.toLowerCase();
            filteredInventory = mockInventory.filter(item => 
                item.name.toLowerCase().includes(search) ||
                item.sku.toLowerCase().includes(search) ||
                item.seller.toLowerCase().includes(search) ||
                item.category.toLowerCase().includes(search)
            );
            renderInventoryTable();
        });

        // Update stock
        function updateStock(id) {
            const item = mockInventory.find(i => i.id === id);
            const modalContent = document.getElementById('modalContent');
            
            modalContent.innerHTML = `
                <div class="space-y-4">
                    <div class="flex items-center space-x-4 mb-4">
                        <img src="${item.image}" alt="${item.name}" class="w-16 h-16 rounded-lg object-cover">
                        <div>
                            <h4 class="font-semibold text-gray-800">${item.name}</h4>
                            <p class="text-sm text-gray-600">SKU: ${item.sku}</p>
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Current Stock</label>
                            <input type="number" value="${item.currentStock}" class="w-full px-3 py-2 border border-gray-300 rounded-lg" readonly>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Add/Remove Stock</label>
                            <input type="number" id="stockChange" placeholder="+50 or -10" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-purple-500">
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Min Stock Level</label>
                            <input type="number" value="${item.minStock}" class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Max Stock Level</label>
                            <input type="number" value="${item.maxStock}" class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                        </div>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Notes</label>
                        <textarea class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-purple-500" rows="3" placeholder="Add notes about this stock update..."></textarea>
                    </div>
                    
                    <div class="flex space-x-3 pt-4">
                        <button onclick="saveStockUpdate(${item.id})" class="flex-1 bg-purple-600 text-white py-2 rounded-lg hover:bg-purple-700">
                            Save Changes
                        </button>
                        <button onclick="closeModal()" class="flex-1 bg-gray-200 text-gray-700 py-2 rounded-lg hover:bg-gray-300">
                            Cancel
                        </button>
                    </div>
                </div>
            `;
            
            showModal();
        }

        function saveStockUpdate(id) {
            const stockChange = parseInt(document.getElementById('stockChange').value);
            if (stockChange) {
                const item = mockInventory.find(i => i.id === id);
                item.currentStock = Math.max(0, item.currentStock + stockChange);
                item.lastRestock = new Date().toISOString().split('T')[0];
                
                // Update status based on new stock level
                if (item.currentStock === 0) {
                    item.status = 'critical';
                } else if (item.currentStock < item.minStock) {
                    item.status = 'low';
                } else if (item.currentStock > item.maxStock) {
                    item.status = 'overstock';
                } else {
                    item.status = 'healthy';
                }
                
                renderInventoryTable();
                closeModal();
                showNotification('Stock updated successfully', 'success');
            }
        }

        function viewHistory(id) {
            alert('Viewing stock history for item #' + id);
        }

        function reorderStock(id) {
            if (confirm('Create a reorder request for this item?')) {
                showNotification('Reorder request created', 'success');
            }
        }

        // Initialize stock chart
        const stockCtx = document.getElementById('stockChart').getContext('2d');
        new Chart(stockCtx, {
            type: 'bar',
            data: {
                labels: ['Women\'s Fashion', 'Men\'s Fashion', 'Kids', 'Accessories', 'Footwear'],
                datasets: [
                    {
                        label: 'In Stock',
                        data: [234, 189, 156, 298, 145],
                        backgroundColor: 'rgba(34, 197, 94, 0.8)'
                    },
                    {
                        label: 'Low Stock',
                        data: [45, 23, 12, 34, 21],
                        backgroundColor: 'rgba(251, 146, 60, 0.8)'
                    },
                    {
                        label: 'Out of Stock',
                        data: [12, 8, 3, 15, 5],
                        backgroundColor: 'rgba(239, 68, 68, 0.8)'
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        stacked: true
                    },
                    y: {
                        stacked: true,
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });

        // Modal functions
        function showModal() {
            document.getElementById('stockModal').classList.add('show');
        }

        function closeModal() {
            document.getElementById('stockModal').classList.remove('show');
        }

        // Notification function
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg shadow-lg z-50 ${
                type === 'success' ? 'bg-green-500' : 
                type === 'error' ? 'bg-red-500' : 
                'bg-yellow-500'
            } text-white`;
            notification.innerHTML = `
                <div class="flex items-center">
                    <i class="fas fa-${type === 'success' ? 'check' : type === 'error' ? 'times' : 'exclamation'}-circle mr-2"></i>
                    ${message}
                </div>
            `;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Sidebar toggle
        document.getElementById('sidebarToggle').addEventListener('click', function() {
            document.getElementById('sidebar').classList.toggle('-translate-x-full');
        });

        // Initialize
        renderInventoryTable();

        // Animate stock level bars on load
        setTimeout(() => {
            document.querySelectorAll('.stock-level-bar').forEach(bar => {
                const width = bar.style.width;
                bar.style.width = '0%';
                setTimeout(() => {
                    bar.style.width = width;
                }, 100);
            });
        }, 100);
    </script>
</body>
</html>