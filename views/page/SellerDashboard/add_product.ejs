<% layout('layouts/sellerDashboardBoilerplate.ejs') %>
<% block('css').append(`
    <link rel="stylesheet" href="/css/sellerDashboardStyles/add_product.css">
    <!-- Add Cropper.js CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
    <!-- fast-average-color CDN -->
    <script src="https://cdn.jsdelivr.net/npm/fast-average-color/dist/index.browser.min.js"></script>
    <!-- lodash CDN -->
    <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js"></script>
    <!-- nspell CDN -->
    <script src="https://cdn.jsdelivr.net/npm/nspell/dist/nspell.min.js"></script>
    <!-- nspell dictionary files should be placed in /public/js/dictionaries/en_US.aff and en_US.dic -->
`); %>
<section class="body bg-gray-50 min-h-screen" x-data="Object.assign(contentScore(), publishProductHandler())">
    <div class="bg-white shadow-sm sticky top-0 z-40 border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <div class="flex items-center space-x-4">
                    <button class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-arrow-left text-xl"></i>
                    </button>
                    <h1 class="text-2xl font-bold text-gray-900">Add Fashion Product</h1>
                </div>
                <div class="flex items-center space-x-3">
                    <button class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50">
                        Save Draft
                    </button>
                    <button class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                        Preview
                    </button>
                    <button
                        :disabled="score < 80 || isPublishing"
                        :class="{ 'bg-blue-600 hover:bg-blue-700': score >= 80 && !isPublishing, 'bg-gray-400 cursor-not-allowed opacity-60': score < 80 || isPublishing }"
                        class="px-4 py-2 text-white rounded-lg font-medium transition-colors duration-300"
                        @click="publishProduct()"
                    >
                        <span x-show="!isPublishing">Publish Product</span>
                        <span x-show="isPublishing"><i class='fas fa-spinner fa-spin'></i> Publishing...</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Name Section (keep as is) -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div class="bg-white rounded-xl shadow-sm border p-6 mb-6">
            <label for="productName" class="block text-lg font-semibold text-gray-900 mb-2">Product Name *</label>
            <input id="productName" name="productName" type="text" required maxlength="120"
                   class="w-full p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-lg font-medium"
                   placeholder="Enter your product name (max 120 characters)">
            <div class="text-sm text-gray-500 mt-2">Make it descriptive and unique. E.g., "Women's Blue Denim Jacket with Embroidery"</div>
                        </div>
                    </div>
                    
    <!-- Advanced Category Browser Section (from p1.html) -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-6">
        <div class="bg-white rounded-xl shadow-sm border p-6 mb-6" x-data="advancedCategorySelector()" x-init="Alpine.store('categorySelector', $data); init()">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">Browse Category *</h2>
            <div class="flex border rounded-lg overflow-x-auto bg-white min-h-[400px]" x-ref="categoryScroll">
                <template x-for="(column, level) in columns" :key="level">
                    <div class="w-64 border-r last:border-r-0 flex-shrink-0 flex flex-col">
                        <div class="p-2 border-b">
                             <div class="relative">
                                <i class="fas fa-filter absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 text-xs"></i>
                                <input type="text" x-model="column.filter" placeholder="Filter..." class="w-full text-sm pl-8 pr-4 py-1.5 border border-gray-200 rounded-md focus:ring-1 focus:ring-blue-500 focus:border-transparent transition">
                                        </div>
                        </div>
                        <ul class="category-column-list flex-1 overflow-y-auto p-2">
                            <template x-for="(item, index) in getFilteredItems(column)" :key="item._id || ((item.name || 'unnamed') + '-' + index)">
                                <li @click="select(level, item)"
                                    class="flex justify-between items-center p-2 rounded-md cursor-pointer transition-all duration-200"
                                    :class="{
                                        'bg-blue-50 text-blue-700 font-semibold': isActive(level, item.name),
                                        'hover:bg-gray-100': !isActive(level, item.name)
                                    }">
                                    <span class="truncate" x-text="item.name"></span>
                                    <i x-show="item.children && item.children.length > 0" class="fas fa-chevron-right text-xs text-gray-400 ml-2"></i>
                                </li>
                                    </template>
                        </ul>
                                </div>
                </template>
                            </div>
            <div class="mt-4">
                <template x-if="selectedPath.length > 0">
                    <div class="p-3 bg-blue-50 rounded-lg text-blue-800 text-sm font-medium flex items-center flex-wrap">
                        <span class="text-gray-700 font-normal mr-2">Current selection:</span>
                        <template x-for="(item, index) in selectedPath" :key="index">
                           <span class="breadcrumb-arrow" x-text="item.name"></span>
                        </template>
                        <button @click="clearSelection()" class="ml-auto text-red-500 hover:text-red-700">
                             <i class="fas fa-times-circle"></i>
                        </button>
                            </div>
                        </template>
                <template x-if="selectedPath.length === 0">
                     <div class="p-3 bg-gray-50 rounded-lg text-gray-500 text-sm">
                        Please select a category from the browser above.
                        </div>
                            </template>
                        </div>
                    </div>
                </div>
                <%- block('script').append(`
                    <script src="/js/sellerDashboardJS/categoryTree.js"></script>
                `); %>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
            <div class="lg:col-span-3 space-y-6">
                
                <div class="bg-white rounded-xl shadow-sm border p-6" x-data="imageUploader()" x-init="Alpine.store('imageUploader', $data)">
                    <div class="flex items-center justify-between mb-4">
                        <h2 class="text-lg font-semibold text-gray-900">Product Images *</h2>
                        <div class="tooltip">
                            <i class="fas fa-question-circle text-gray-400 cursor-help"></i>
                            <span class="tooltip-text">Upload up to 7 images. First image will be the cover image.</span>
                        </div>
                    </div>

                    <div class="mb-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                        <h4 class="font-medium text-yellow-800 mb-2">Image Guidelines:</h4>
                        <ul class="text-sm text-yellow-700 space-y-1">
                            <li>• Min size: 480x480px</li>
                            <li>• Max size: 100MB per image</li>
                            <li>• Formats: JPG, PNG</li>
                            <li>• White background recommended for cover image</li>
                        </ul>
                    </div>

                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <template x-for="(image, index) in images" :key="index">
                            <div class="image-preview relative bg-gray-100 rounded-lg aspect-square">
                                <img :src="image.url" :alt="'Product image ' + (index + 1)" 
                                     class="w-full h-full object-cover rounded-lg">
                                <div class="image-overlay">
                                    <button @click="editImage(index)" class="bg-white text-gray-700 p-2 rounded-full hover:bg-gray-100">
                                        <i class="fas fa-edit text-sm"></i>
                                    </button>
                                    <button @click="removeImage(index)" class="bg-red-500 text-white p-2 rounded-full hover:bg-red-600">
                                        <i class="fas fa-trash text-sm"></i>
                                    </button>
                                </div>
                                <div x-show="index === 0" class="absolute top-2 left-2 bg-blue-600 text-white px-2 py-1 rounded text-xs font-semibold shadow">
                                    Cover Photo
                                </div>
                            </div>
                        </template>

                        <template x-for="slot in (7 - images.length)" :key="'slot-' + slot">
                            <div @click="$refs.imageInput.click()" 
                                 class="image-upload-slot flex flex-col items-center justify-center aspect-square rounded-lg cursor-pointer">
                                <i class="fas fa-plus text-2xl text-gray-400 mb-2"></i>
                                <span class="text-sm text-gray-500">Add Image</span>
                            </div>
                        </template>
                    </div>
                    <!-- Elegant tip below the image grid -->
                    <div x-show="images.length > 0" class="mt-2 text-sm text-blue-700 bg-blue-50 rounded px-3 py-2 flex items-center gap-2">
                        <i class="fas fa-info-circle"></i>
                        <span>
                            The first image is your product's cover photo and will be most visible to shoppers. For best results, choose a bright, neutral background.
                        </span>
                    </div>

                    <input type="file" x-ref="imageInput" @change="handleImageUpload" 
                           accept=".jpg,.jpeg,.png" multiple class="hidden">

                    <!-- Upload Loader Overlay -->
                    <div x-show="isUploading" class="fixed inset-0 z-[99999] flex items-center justify-center bg-black bg-opacity-40" style="backdrop-filter: blur(2px);">
                      <div class="flex flex-col items-center justify-center p-8 bg-white rounded-xl shadow-xl border border-blue-100">
                        <i class="fas fa-spinner fa-spin text-3xl text-blue-600 mb-4"></i>
                        <div class="w-48 h-2 bg-blue-100 rounded-full overflow-hidden mb-2">
                          <div class="bg-blue-500 h-2 animate-pulse w-full"></div>
                        </div>
                        <span class="text-blue-700 font-semibold text-lg">Uploading image...</span>
                      </div>
                    </div>

                    <!-- Edit Modal (moved here, inside this x-data) -->
                    <div x-show="showEditModal" @keydown.escape.window="showEditModal = false" class="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-[9999] p-4" style="display: none;">
                        <div @click.away="showEditModal = false" class="bg-white rounded-xl shadow-2xl w-full max-w-4xl max-h-full flex flex-col">
                            <div class="flex justify-between items-center p-4 border-b">
                                <h3 class="text-xl font-semibold">Edit Image</h3>
                                <button @click="showEditModal = false" class="text-gray-500 hover:text-gray-800">&times;</button>
                            </div>
                            <div class="flex-grow p-4 overflow-y-auto flex flex-col md:flex-row gap-4">
                                <!-- Image Container -->
                                <div class="w-full md:w-2/3 bg-white rounded-lg overflow-hidden">
                                    <img id="imageToEdit" :src="editingImage ? editingImage.url : ''" class="max-w-full max-h-full">
                                </div>
                                <!-- Tools -->
                                <div class="w-full md:w-1/3 space-y-4">
                                    <div>
                                        <h4 class="font-semibold mb-2">Crop Ratio</h4>
                                        <div class="flex space-x-2">
                                            <button @click="setAspectRatio('free')" :class="{'bg-blue-600 text-white': aspectRatio === 'free'}" class="flex-1 p-2 rounded-lg bg-gray-200 hover:bg-gray-300 transition">Free</button>
                                            <button @click="setAspectRatio(1/1)" :class="{'bg-blue-600 text-white': aspectRatio === 1/1}" class="flex-1 p-2 rounded-lg bg-gray-200 hover:bg-gray-300 transition">1:1</button>
                                            <button @click="setAspectRatio(4/5)" :class="{'bg-blue-600 text-white': aspectRatio === 4/5}" class="flex-1 p-2 rounded-lg bg-gray-200 hover:bg-gray-300 transition">4:5</button>
                                        </div>
                                    </div>
                                    <div>
                                        <h4 class="font-semibold mb-2">Image Tools</h4>
                                        <div class="grid grid-cols-2 gap-2">
                                            <button @click="removeBackground()" class="p-2 rounded-lg bg-gray-200 hover:bg-gray-300 transition flex items-center justify-center gap-2">
                                                <i class="fas fa-magic"></i>
                                                <span>Remove BG</span>
                                            </button>
                                            <button @click="cropper.rotate(90)" class="p-2 rounded-lg bg-gray-200 hover:bg-gray-300 transition flex items-center justify-center gap-2">
                                                <i class="fas fa-redo"></i> Rotate
                                            </button>
                                            <button @click="flip('horizontal')" class="p-2 rounded-lg bg-gray-200 hover:bg-gray-300 transition flex items-center justify-center gap-2">
                                                <i class="fas fa-arrows-alt-h"></i> Mirror
                                            </button>
                                            <button @click="viewEdited()" class="col-span-1 p-2 rounded-lg bg-green-500 text-white hover:bg-green-600 transition flex items-center justify-center gap-2">
                                                <i class="fas fa-eye"></i> View Edited
                                            </button>
                                            <button @click="resetImage()" class="col-span-1 p-2 rounded-lg bg-yellow-500 text-white hover:bg-yellow-600 transition flex items-center justify-center gap-2">
                                                <i class="fas fa-undo"></i> Reset to Original
                                            </button>
                                            <button @click="deleteImage()" class="col-span-2 p-2 rounded-lg bg-red-500 text-white hover:bg-red-600 transition flex items-center justify-center gap-2">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </div>
                                    </div>
                                    <div x-show="isLoading" class="text-center p-4">
                                        <i class="fas fa-spinner fa-spin text-2xl text-blue-600"></i>
                                        <p>Processing...</p>
                                    </div>
                                </div>
                            </div>
                             <div class="p-4 border-t flex justify-end space-x-2">
                                <button @click="cancelModal()" class="px-4 py-2 rounded-lg bg-gray-200 hover:bg-gray-300 transition">Cancel</button>
                                <button @click="applyChanges()" class="px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition">Confirm</button>
                            </div>
                            <!-- Edit Loader Overlay -->
                            <div x-show="isSavingEdit" class="fixed inset-0 z-[100000] flex items-center justify-center bg-black bg-opacity-40" style="backdrop-filter: blur(2px);">
                              <div class="flex flex-col items-center justify-center p-8 bg-white rounded-xl shadow-xl border border-blue-100">
                                <i class="fas fa-spinner fa-spin text-3xl text-blue-600 mb-4"></i>
                                <div class="w-48 h-2 bg-blue-100 rounded-full overflow-hidden mb-2">
                                  <div class="bg-blue-500 h-2 animate-pulse w-full"></div>
                                </div>
                                <span class="text-blue-700 font-semibold text-lg">Saving edit...</span>
                              </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-xl shadow-sm border p-6" x-data="brandSelector()" x-init="Alpine.store('brandSelector', $data)">
                    <div class="flex items-center justify-between mb-4">
                        <h2 class="text-lg font-semibold text-gray-900">Brand Selection</h2>
                        <div class="tooltip">
                            <i class="fas fa-question-circle text-gray-400 cursor-help"></i>
                            <span class="tooltip-text">Select the brand of your product</span>
                        </div>
                    </div>

                    <div class="relative">
                        <input type="text" x-model="brandSearch" @input="filterBrands()" @focus="showDropdown = true"
                               placeholder="Search or select brand..." 
                               class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                        
                        <div x-show="showDropdown" @click.away="showDropdown = false" 
                             class="absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-y-auto">
                            <template x-for="brand in filteredBrands" :key="brand">
                                <div @click="selectBrand(brand)" 
                                     class="p-3 hover:bg-gray-50 cursor-pointer border-b border-gray-100 last:border-b-0"
                                     x-text="brand">
                                </div>
                            </template>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-xl shadow-sm border p-6" x-data="variantManager()" x-init="Alpine.store('variantManager', $data)">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-lg font-semibold text-gray-900">Product Variants</h2>
                        <div class="tooltip">
                            <i class="fas fa-question-circle text-gray-400 cursor-help"></i>
                            <span class="tooltip-text">Add color and size variants for your product</span>
                        </div>
                    </div>

                    <div class="mb-8">
                        <h3 class="text-md font-medium text-gray-800 mb-4">Colors</h3>
                        <div class="flex flex-wrap gap-3 mb-4">
                            <template x-for="(color, index) in colors" :key="index">
                                <div class="flex items-center space-x-2 bg-gray-50 px-3 py-2 rounded-lg relative">
                                    <div class="color-picker" :style="'background-color: ' + color.hex"></div>
                                    <span x-text="color.name" class="text-sm font-medium"></span>
                                    <button @click="removeColor(index)" class="text-red-500 hover:text-red-700">
                                        <i class="fas fa-times text-xs"></i>
                                    </button>
                                    <!-- Color Image Upload -->
                                    <div class="ml-2 flex items-center">
                                        <template x-if="!color.imageUrl">
                                            <label class="cursor-pointer flex items-center text-blue-600 hover:underline">
                                                <i class="fas fa-image mr-1"></i>
                                                <span class="text-xs">Upload</span>
                                                <input type="file" class="hidden" accept=".jpg,.jpeg,.png" @change="uploadColorImage($event, index)">
                                            </label>
                                        </template>
                                        <template x-if="color.imageUrl">
                                            <div class="flex items-center space-x-1">
                                                <img :src="color.imageUrl" alt="Color Image" class="w-8 h-8 object-cover rounded border" @click="editColorImage(index)" style="cursor:pointer;">
                                                <button @click="deleteColorImage(index)" class="text-red-500 hover:text-red-700 ml-1">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </template>
                                    </div>
                                </div>
                            </template>
                            <button @click="showColorModal = true" 
                                    class="flex items-center space-x-2 border-2 border-dashed border-gray-300 px-3 py-2 rounded-lg hover:border-blue-500 hover:text-blue-600">
                                <i class="fas fa-plus"></i>
                                <span class="text-sm">Add Color</span>
                            </button>
                        </div>
                        <!-- Loader overlay for color image upload -->
                        <div x-show="showColorImageUploading" class="fixed inset-0 z-[99999] flex items-center justify-center bg-black bg-opacity-40" style="backdrop-filter: blur(2px);">
                          <div class="flex flex-col items-center justify-center p-8 bg-white rounded-xl shadow-xl border border-blue-100">
                            <i class="fas fa-spinner fa-spin text-3xl text-blue-600 mb-4"></i>
                            <div class="w-48 h-2 bg-blue-100 rounded-full overflow-hidden mb-2">
                              <div class="bg-blue-500 h-2 animate-pulse w-full"></div>
                            </div>
                            <span class="text-blue-700 font-semibold text-lg">Uploading color image...</span>
                          </div>
                        </div>
                        <!-- Color Image Crop/Edit Modal -->
                        <div x-show="showColorImageModal" @keydown.escape.window="showColorImageModal = false" class="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-[9999] p-4" style="display: none;">
                            <div @click.away="showColorImageModal = false" class="bg-white rounded-xl shadow-2xl w-full max-w-2xl max-h-full flex flex-col">
                                <div class="flex justify-between items-center p-4 border-b">
                                    <h3 class="text-xl font-semibold">Edit Color Image</h3>
                                    <button @click="showColorImageModal = false" class="text-gray-500 hover:text-gray-800">&times;</button>
                                </div>
                                <div class="flex-grow p-4 overflow-y-auto flex flex-col gap-4">
                                    <div class="w-full flex justify-center items-center">
                                        <img id="colorImageToEdit" :src="workingColorImage ? workingColorImage.imageUrl : ''" class="max-w-full max-h-80 rounded border">
                                    </div>
                                    <div class="flex justify-end space-x-2 mt-4">
                                        <button @click="cancelColorImageModal()" class="px-4 py-2 rounded-lg bg-gray-200 hover:bg-gray-300 transition">Cancel</button>
                                        <button @click="applyColorImageChanges()" class="px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition">Confirm</button>
                                    </div>
                                </div>
                                <!-- Loader overlay for color image saving -->
                                <div x-show="showColorImageSaving" class="fixed inset-0 z-[100000] flex items-center justify-center bg-black bg-opacity-40" style="backdrop-filter: blur(2px);">
                                  <div class="flex flex-col items-center justify-center p-8 bg-white rounded-xl shadow-xl border border-blue-100">
                                    <i class="fas fa-spinner fa-spin text-3xl text-blue-600 mb-4"></i>
                                    <div class="w-48 h-2 bg-blue-100 rounded-full overflow-hidden mb-2">
                                      <div class="bg-blue-500 h-2 animate-pulse w-full"></div>
                                    </div>
                                    <span class="text-blue-700 font-semibold text-lg">Saving color image...</span>
                                  </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-8">
                        <h3 class="text-md font-medium text-gray-800 mb-4">Size Chart</h3>
                        <div class="overflow-x-auto">
                            <table class="size-table w-full bg-white">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="text-left">Size</th>
                                        <th class="text-left">Body Part</th>
                                        <th class="text-left">Unit</th>
                                        <th class="text-left">Measurement</th>
                                        <th class="text-left">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <template x-for="(size, index) in sizeChart" :key="index">
                                        <tr>
                                            <td>
                                                <select x-model="size.size" class="w-full p-2 border rounded">
                                                    <option value="XS">XS</option>
                                                    <option value="S">S</option>
                                                    <option value="M">M</option>
                                                    <option value="L">L</option>
                                                    <option value="XL">XL</option>
                                                    <option value="XXL">XXL</option>
                                                </select>
                                            </td>
                                            <td>
                                                <select x-model="size.bodyPart" class="w-full p-2 border rounded">
                                                    <option value="Chest">Chest</option>
                                                    <option value="Waist">Waist</option>
                                                    <option value="Hips">Hips</option>
                                                    <option value="Length">Length</option>
                                                    <option value="Shoulder">Shoulder</option>
                                                </select>
                                            </td>
                                            <td>
                                                <select x-model="size.unit" class="w-full p-2 border rounded">
                                                    <option value="cm">cm</option>
                                                    <option value="inch">inch</option>
                                                </select>
                                            </td>
                                            <td>
                                                <input type="number" x-model="size.value" 
                                                       class="w-full p-2 border rounded" placeholder="0">
                                            </td>
                                            <td>
                                                <button @click="removeSizeRow(index)" 
                                                        class="text-red-500 hover:text-red-700">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    </template>
                                </tbody>
                            </table>
                        </div>
                        <button @click="addSizeRow()" 
                                class="mt-3 px-4 py-2 border border-blue-500 text-blue-600 rounded-lg hover:bg-blue-50">
                            <i class="fas fa-plus mr-2"></i>Add Size Row
                        </button>
                    </div>

                    <div x-show="colors.length > 0 && getUniqueSizes().length > 0">
                        <h3 class="text-md font-medium text-gray-800 mb-4">Variant Combinations</h3>
                        <div class="overflow-x-auto">
                            <table class="variant-table w-full bg-white text-sm">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th>Color</th>
                                        <th>Size</th>
                                        <th>Price ($)</th>
                                        <th>Price after discount ($)</th>
                                        <th>Stock</th>
                                        <th>SKU</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <template x-for="combination in getVariantCombinations()" :key="combination.id">
                                        <tr>
                                            <td x-text="combination.color"></td>
                                            <td x-text="combination.size"></td>
                                            <td>
                                                <input type="number" x-model="combination.price" 
                                                       class="w-full p-1 border rounded text-center" placeholder="0">
                                            </td>
                                            <td>
                                                <input type="number" x-model="combination.salePrice" 
                                                       class="w-full p-1 border rounded text-center" placeholder="0">
                                            </td>
                                            <td>
                                                <input type="number" x-model="combination.stock" 
                                                       class="w-full p-1 border rounded text-center" placeholder="0">
                                            </td>
                                            <td>
                                                <input type="text" x-model="combination.sku" 
                                                       class="w-full p-1 border rounded text-center" placeholder="SKU">
                                            </td>
                                            <td>
                                                <button @click="combination.active = !combination.active"
                                                        :class="combination.active ? 'bg-green-500' : 'bg-gray-300'"
                                                        class="w-6 h-6 rounded-full text-white text-xs">
                                                    <i :class="combination.active ? 'fas fa-check' : 'fas fa-times'"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    </template>
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div x-show="showColorModal" class="modal show">
                        <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
                            <h3 class="text-lg font-semibold mb-4">Add Color</h3>
                            <div class="space-y-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Color Name</label>
                                    <input type="text" x-model="newColor.name" 
                                           class="w-full p-3 border border-gray-300 rounded-lg" 
                                           placeholder="e.g., Navy Blue">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Color</label>
                                    <input type="color" x-model="newColor.hex" 
                                           class="w-full h-12 border border-gray-300 rounded-lg">
                                </div>
                                <div class="flex justify-end space-x-3">
                                    <button @click="showColorModal = false" 
                                            class="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50">
                                        Cancel
                                    </button>
                                    <button @click="addColor()" 
                                            class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                                        Add Color
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-xl shadow-sm border p-6" x-data="descriptionEditor()" x-init="Alpine.store('descriptionEditor', $data)">
                    <div class="flex items-center justify-between mb-4">
                        <h2 class="text-lg font-semibold text-gray-900">Product Description *</h2>
                        <div class="flex items-center space-x-2">
                            <span x-text="wordCount + '/30 words minimum'" 
                                  :class="wordCount >= 30 ? 'text-green-600' : 'text-red-500'" 
                                  class="text-sm"></span>
                            <div class="tooltip">
                                <i class="fas fa-question-circle text-gray-400 cursor-help"></i>
                                <span class="tooltip-text">Write a detailed description of your product (minimum 30 words)</span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <div class="flex items-center space-x-2 p-2 border-b border-gray-200">
                            <button @click="formatText('bold')" :class="isBold ? 'bg-blue-100 font-bold' : ''" class="p-2 hover:bg-gray-100 rounded" type="button">
                                <i class="fas fa-bold"></i>
                            </button>
                            <button @click="formatText('italic')" :class="isItalic ? 'bg-blue-100 italic' : ''" class="p-2 hover:bg-gray-100 rounded" type="button">
                                <i class="fas fa-italic"></i>
                            </button>
                            <button @click="formatText('insertUnorderedList')" :class="isUL ? 'bg-blue-100' : ''" class="p-2 hover:bg-gray-100 rounded" type="button">
                                <i class="fas fa-list-ul"></i>
                            </button>
                            <button @click="formatText('insertOrderedList')" :class="isOL ? 'bg-blue-100' : ''" class="p-2 hover:bg-gray-100 rounded" type="button">
                                <i class="fas fa-list-ol"></i>
                            </button>
                        </div>
                    </div>

                    <div contenteditable="true" x-ref="editor"
                         @input="updateWordCount()"
                         @keydown="handleKeydown($event)"
                         @focus="onFocus()"
                         @blur="onBlur()"
                         x-init="init()"
                         class="rich-editor focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none min-h-[120px]"
                         style="white-space: pre-wrap;">
                    </div>
                </div>

                <div class="bg-white rounded-xl shadow-sm border p-6" x-data="highlightsManager()" x-init="Alpine.store('highlightsManager', $data)">
                    <div class="flex items-center justify-between mb-4">
                        <h2 class="text-lg font-semibold text-gray-900">Product Highlights</h2>
                        <div class="tooltip">
                            <i class="fas fa-question-circle text-gray-400 cursor-help"></i>
                            <span class="tooltip-text">Add key features and highlights (minimum 3 recommended)</span>
                        </div>
                    </div>

                    <div class="space-y-3">
                        <template x-for="(highlight, index) in highlights" :key="index">
                            <div class="flex items-center space-x-3">
                                <div class="flex-1">
                                    <input type="text" x-model="highlight.text" 
                                           class="w-full p-3 border border-gray-300 rounded-lg" 
                                           placeholder="Enter product highlight...">
                                </div>
                                <button @click="removeHighlight(index)" 
                                        class="text-red-500 hover:text-red-700 p-2">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </template>
                        
                        <button @click="addHighlight()" 
                                class="w-full p-3 border-2 border-dashed border-gray-300 rounded-lg text-gray-500 hover:border-blue-500 hover:text-blue-600">
                            <i class="fas fa-plus mr-2"></i>Add Highlight
                        </button>

                        <div class="mt-4">
                            <h4 class="text-sm font-medium text-gray-700 mb-2">Suggested Highlights:</h4>
                            <div class="flex flex-wrap gap-2">
                                <template x-for="suggestion in suggestions" :key="suggestion">
                                    <button @click="addSuggestion(suggestion)" 
                                            class="px-3 py-1 bg-blue-50 text-blue-600 rounded-full text-sm hover:bg-blue-100">
                                        + <span x-text="suggestion"></span>
                                    </button>
                                </template>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- More Details About Product Section -->
                <div class="bg-white rounded-xl shadow-sm border p-6 mt-6" x-data="moreDetailsManager()" x-init="Alpine.store('moreDetailsManager', $data)">
                    <h2 class="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
                        <i class="fas fa-info-circle text-blue-500"></i> More Details About Product
                    </h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Fabric -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Fabric</label>
                            <div class="flex flex-wrap gap-2">
                                <template x-for="fabric in fabrics" :key="fabric">
                                    <label class="inline-flex items-center bg-gray-50 px-3 py-2 rounded-lg border border-gray-200 cursor-pointer hover:bg-blue-50">
                                        <input type="radio" class="form-radio text-blue-600" name="fabric" :value="fabric" x-model="selected.fabric">
                                        <span class="ml-2" x-text="fabric"></span>
                                    </label>
                                </template>
                                <label class="inline-flex items-center bg-gray-50 px-3 py-2 rounded-lg border border-gray-200 cursor-pointer hover:bg-blue-50">
                                    <input type="radio" class="form-radio text-blue-600" name="fabric" value="Other" x-model="selected.fabric">
                                    <span class="ml-2">Other</span>
                                </label>
                                <input x-show="selected.fabric === 'Other'" type="text" x-model="selected.fabric" placeholder="Enter fabric" class="ml-2 mt-2 p-2 border rounded w-full" />
                            </div>
                        </div>
                        <!-- Fashion Trend -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Fashion Trend</label>
                            <select x-model="selected.fashionTrend" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Trend</option>
                                <template x-for="trend in fashionTrends" :key="trend">
                                    <option :value="trend" x-text="trend"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Fit -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Fit</label>
                            <select x-model="selected.fit" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Fit</option>
                                <template x-for="fit in fits" :key="fit">
                                    <option :value="fit" x-text="fit"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Length -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Length</label>
                            <select x-model="selected.length" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Length</option>
                                <template x-for="length in lengths" :key="length">
                                    <option :value="length" x-text="length"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Multipack Set -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Multipack Set</label>
                            <select x-model="selected.multipack" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Option</option>
                                <template x-for="pack in multipacks" :key="pack">
                                    <option :value="pack" x-text="pack"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Neck Type -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Neck Type</label>
                            <select x-model="selected.neckType" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Neck Type</option>
                                <template x-for="neck in neckTypes" :key="neck">
                                    <option :value="neck" x-text="neck"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Number of Items -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Number of Items</label>
                            <div class="flex gap-2 flex-wrap">
                                <template x-for="num in numberOfItems" :key="num">
                                    <label class="inline-flex items-center bg-gray-50 px-3 py-2 rounded-lg border border-gray-200 cursor-pointer hover:bg-blue-50">
                                        <input type="radio" class="form-radio text-blue-600" name="numItems" :value="num" x-model="selected.numItems">
                                        <span class="ml-2" x-text="num"></span>
                                    </label>
                                </template>
                                <label class="inline-flex items-center bg-gray-50 px-3 py-2 rounded-lg border border-gray-200 cursor-pointer hover:bg-blue-50">
                                    <input type="radio" class="form-radio text-blue-600" name="numItems" value="Custom" x-model="selected.numItems">
                                    <span class="ml-2">Custom</span>
                                </label>
                                <input x-show="selected.numItems === 'Custom'" type="number" min="1" x-model="selected.numItems" placeholder="Enter number" class="ml-2 mt-2 p-2 border rounded w-full" />
                            </div>
                        </div>
                        <!-- Occasion -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Occasion</label>
                            <select x-model="selected.occasion" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Occasion</option>
                                <template x-for="occasion in occasions" :key="occasion">
                                    <option :value="occasion" x-text="occasion"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Package Contains -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Package Contains</label>
                            <select x-model="selected.packageContains" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Item</option>
                                <template x-for="item in packageContains" :key="item">
                                    <option :value="item" x-text="item"></option>
                                </template>
                            </select>
                            <input x-show="selected.packageContains === 'Other'" type="text" x-model="selected.packageContains" placeholder="Enter item" class="mt-2 p-2 border rounded w-full" />
                        </div>
                        <!-- Pattern -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Pattern</label>
                            <select x-model="selected.pattern" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Pattern</option>
                                <template x-for="pattern in patterns" :key="pattern">
                                    <option :value="pattern" x-text="pattern"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Print or Pattern Type -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Print or Pattern Type</label>
                            <select x-model="selected.printPatternType" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Type</option>
                                <template x-for="type in printPatternTypes" :key="type">
                                    <option :value="type" x-text="type"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Sleeve Length -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Sleeve Length</label>
                            <select x-model="selected.sleeveLength" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Sleeve Length</option>
                                <template x-for="length in sleeveLengths" :key="length">
                                    <option :value="length" x-text="length"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Sleeve Styling -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Sleeve Styling</label>
                            <select x-model="selected.sleeveStyling" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Styling</option>
                                <template x-for="style in sleeveStylings" :key="style">
                                    <option :value="style" x-text="style"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Wash Care -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Wash Care</label>
                            <select x-model="selected.washCare" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Wash Care</option>
                                <template x-for="care in washCares" :key="care">
                                    <option :value="care" x-text="care"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Weave Type -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Weave Type</label>
                            <select x-model="selected.weaveType" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Weave Type</option>
                                <template x-for="weave in weaveTypes" :key="weave">
                                    <option :value="weave" x-text="weave"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Transparency -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Transparency</label>
                            <select x-model="selected.transparency" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Transparency</option>
                                <template x-for="trans in transparencies" :key="trans">
                                    <option :value="trans" x-text="trans"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Surface Styling -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Surface Styling</label>
                            <select x-model="selected.surfaceStyling" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Styling</option>
                                <template x-for="style in surfaceStylings" :key="style">
                                    <option :value="style" x-text="style"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Closure Type -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Closure Type</label>
                            <select x-model="selected.closureType" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Closure Type</option>
                                <template x-for="closure in closureTypes" :key="closure">
                                    <option :value="closure" x-text="closure"></option>
                                </template>
                            </select>
                        </div>
                        <!-- Lining -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Lining</label>
                            <select x-model="selected.lining" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="">Select Lining</option>
                                <template x-for="lining in linings" :key="lining">
                                    <option :value="lining" x-text="lining"></option>
                                </template>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Content Score -->
            <div class="lg:col-span-1">
                <div class="bg-white rounded-xl shadow-sm border p-6 sticky top-24" style="max-height: 500px; overflow-y: auto;">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Content Score</h3>
                    
                    <div class="mb-6">
                        <div class="flex justify-between items-center mb-2">
                            <span class="text-sm font-medium text-gray-700">Progress</span>
                            <!-- Use 'score' directly -->
                            <span x-text="score + '%'" class="text-sm font-medium text-blue-600"></span>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div class="progress-bar bg-blue-600 h-2 rounded-full" :style="'width: ' + score + '%'"></div>
                        </div>
                    </div>
                    <div class="space-y-3">
                        <!-- Basic Info -->
                        <!-- <div class="flex items-center space-x-3">
                            <div :class="checks.basicInfo ? 'bg-green-500' : 'bg-gray-300'" 
                                 class="w-5 h-5 rounded-full flex items-center justify-center">
                                <i class="fas fa-check text-white text-xs"></i>
                            </div>
                            <div>
                                <div class="text-sm font-medium text-gray-700">Basic Info</div>
                                <div class="text-xs text-gray-500">Product name (≥30 chars), 3+ images, good quality</div>
                            </div>
                        </div>
                     -->
                     <div class="flex items-center space-x-3">
                        <div :class="[
                                'w-5 h-5 rounded-full flex items-center justify-center',
                                checks.basicInfo ? 'bg-green-500' : 'bg-gray-300'
                            ]">
                            <i class="fas fa-check text-white text-xs"></i>
                        </div>
                        <div>
                            <div class="text-sm font-medium text-gray-700">Basic Info</div>
                            <div class="text-xs text-gray-500">Product name, 3+ quality images </div>
                        </div>
                    </div>
                        <!-- Category & Brand -->
                        <div class="flex items-center space-x-3">
                            <div :class="[
                                    'w-5 h-5 rounded-full flex items-center justify-center',
                                    checks.categoryBrand ? 'bg-green-500' : 'bg-gray-300'
                                ]">
                                <i class="fas fa-check text-white text-xs"></i>
                            </div>
                            <div>
                                <div class="text-sm font-medium text-gray-700">Category & Brand</div>
                                <div class="text-xs text-gray-500">Deep category + brand selected</div>
                            </div>
                        </div>
                    
                        <!-- Variants -->
                        <div class="flex items-center space-x-3">
                            <div :class="[
                                    'w-5 h-5 rounded-full flex items-center justify-center',
                                    checks.variants ? 'bg-green-500' : 'bg-gray-300'
                                ]">
                                <i class="fas fa-check text-white text-xs"></i>
                            </div>
                            <div>
                                <div class="text-sm font-medium text-gray-700">Variants & Pricing</div>
                                <div class="text-xs text-gray-500">Color, size, price, stock & SKU</div>
                            </div>
                        </div>
                    
                        <!-- Description -->
                        <div class="flex items-center space-x-3">
                            <div :class="[
                                    'w-5 h-5 rounded-full flex items-center justify-center',
                                    checks.description ? 'bg-green-500' : 'bg-gray-300'
                                ]">
                                <i class="fas fa-check text-white text-xs"></i>
                            </div>
                            <div>
                                <div class="text-sm font-medium text-gray-700">Description</div>
                                <div class="text-xs text-gray-500">30+ words, structured, formatted</div>
                            </div>
                        </div>
                    
                        <!-- Highlights -->
                        <div class="flex items-center space-x-3">
                            <div :class="[
                                    'w-5 h-5 rounded-full flex items-center justify-center',
                                    checks.highlights ? 'bg-green-500' : 'bg-gray-300'
                                ]">
                                <i class="fas fa-check text-white text-xs"></i>
                            </div>
                            <div>
                                <div class="text-sm font-medium text-gray-700">Highlights</div>
                                <div class="text-xs text-gray-500">At least 3 key features or benefits</div>
                            </div>
                        </div>
                    
                        <!-- Metadata & Extras -->
                        <div class="flex items-center space-x-3">
                            <div :class="[
                                    'w-5 h-5 rounded-full flex items-center justify-center',
                                    checks.metadata ? 'bg-green-500' : 'bg-gray-300'
                                ]">
                                <i class="fas fa-check text-white text-xs"></i>
                            </div>
                            <div>
                                <div class="text-sm font-medium text-gray-700">Metadata & Extras</div>
                                <div class="text-xs text-gray-500">Fabric, trend, fit, sleeve, etc.</div>
                            </div>
                        </div>
                    </div>
                    
                    

                    <div class="mt-6 pt-4 border-t border-gray-200">
                        <div class="text-xs text-gray-500 mb-3">Tips to improve score:</div>
                        <ul x-show="score < 100" class="space-y-1 text-xs text-gray-600">
                            <!-- BASIC INFO -->
                            <li x-show="!checks.basicInfo">• Add a product name with at least 30 characters and upload 3+ images</li>
                            <li x-show="!imageChecks.coverBg">• Use a white or neutral background for the first (cover) image</li>
                            <li x-show="!imageChecks.resolution">• Make sure all images are at least 480x480px</li>
                            <li x-show="!imageChecks.diversity">• Add more image angles (5+ recommended)</li>
                    
                            <!-- CATEGORY & BRAND -->
                            <li x-show="!checks.categoryBrand">• Select a category with at least 3 levels and choose a brand</li>
                    
                            <!-- VARIANTS -->
                            <li x-show="!variantChecks.colors">• Add at least one color variant with an image</li>
                            <li x-show="!variantChecks.sizes">• Add at least one size variant with proper size chart</li>
                            <li x-show="!variantChecks.stockAndPrice">• Fill price, stock, and SKU for all color-size variants</li>
                    
                            <!-- DESCRIPTION -->
                            <li x-show="!descriptionChecks.wordCount">• Write a product description with 30+ words</li>
                            <li x-show="!descriptionChecks.formatting">• Use bullet points or formatted text (bold/italic)</li>
                            <li x-show="!descriptionChecks.keywords">• Mention fabric, fit, or key features in the description</li>
                    
                            <!-- HIGHLIGHTS -->
                            <li x-show="!checks.highlights">• Add at least 3 product highlights</li>
                            <li x-show="!highlightChecks.length">• Make each highlight descriptive (4+ words)</li>
                    
                            <!-- METADATA -->
                            <li x-show="!metadataChecks.coreFields">• Fill fabric, fashion trend, and fit fields</li>
                            <li x-show="!metadataChecks.optionalFields">• Complete more optional metadata fields for bonus points</li>
                        </ul>
                    
                        <div x-show="score === 100" class="text-green-600 text-sm font-medium">
                            <i class="fas fa-check-circle mr-1"></i>Ready to publish!
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>

        <div class="sticky-actions">
            <div class="bg-white border border-gray-200 rounded-lg shadow-lg p-4">
                <div class="flex items-center justify-between space-x-4">
                    <div class="flex items-center space-x-2">
                        <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                            <!-- 4. UPDATE THE SCORE DISPLAY TO USE 'score' -->
                            <span x-text="Math.round(score)" class="text-blue-600 text-sm font-medium"></span>
                        </div>
                        <span class="text-sm text-gray-600">Content Score</span>
                    </div>
                    <div class="flex space-x-3">
                        <button class="px-6 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 font-medium">
                            Save Draft
                        </button>
                        <!-- 5. REPLACE THE STICKY BUTTON WITH THIS -->
                        <button :disabled="score < 80"
                                :class="{ 'bg-blue-600 hover:bg-blue-700': score >= 80, 'bg-gray-400 cursor-not-allowed opacity-60': score < 80 }"
                                class="px-6 py-2 text-white rounded-lg font-medium transition-colors duration-300">
                            Publish Product
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>    
    <% block('script').append(`
    <script src="/js/sellerDashboardJS/add_product.js"></script>
`); %>

<!-- Add Cropper.js JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
function moreDetailsManager() {
    return {
        fabrics: [
            'Cotton', 'Polyester', 'Viscose Rayon', 'Nylon', 'Wool', 'Silk', 'Linen', 'Satin', 'Denim', 'Velvet', 'Chiffon', 'Georgette', 'Modal', 'Crepe', 'Khadi', 'Net', 'Lycra', 'Blended', 'Organza'
        ],
        fashionTrends: [
            'Graphic Prints', 'Oversized', 'Minimalist', 'Athleisure', 'Y2K', 'Boho', 'Streetwear', 'Classic', 'Formalwear', 'Layered', 'Co-ord Sets', 'Retro', 'Contemporary'
        ],
        fits: [
            'Regular Fit', 'Slim Fit', 'Oversized Fit', 'Loose Fit', 'Relaxed Fit', 'Skinny Fit', 'Straight Fit', 'Tailored Fit', 'Boxy Fit', 'A-Line', 'Flared', 'Bodycon'
        ],
        lengths: [
            'Cropped', 'Waist Length', 'Hip Length', 'Thigh Length', 'Knee Length', 'Calf Length', 'Ankle Length', 'Floor Length', 'Longline'
        ],
        multipacks: [
            'Single', 'Pack of 2', 'Pack of 3', 'Pack of 4', 'Pack of 5+'
        ],
        neckTypes: [
            'Round Neck', 'V-Neck', 'Collared', 'Mandarin Collar', 'High Neck', 'Halter Neck', 'Square Neck', 'Sweetheart Neck', 'Boat Neck', 'Scoop Neck', 'Off-Shoulder', 'One-Shoulder', 'Hooded'
        ],
        numberOfItems: ['1', '2', '3'],
        occasions: [
            'Casual', 'Formal', 'Party', 'Festive', 'Wedding', 'Vacation', 'Activewear / Gym', 'Lounge / Sleepwear', 'Ethnic Day', 'Workwear'
        ],
        packageContains: [
            '1 Shirt', '1 T-shirt', '1 Kurta', '1 Dress', '1 Blazer', '1 Saree', '1 Pair of Pants', '1 Lehenga', 'Other'
        ],
        patterns: [
            'Solid', 'Printed', 'Striped', 'Checked', 'Floral', 'Colorblock', 'Embroidered', 'Tie-Dye', 'Abstract', 'Self-Design', 'Animal Print', 'Polka Dots', 'Geometric', 'Textured', 'Foil Print'
        ],
        printPatternTypes: [
            'Graphic', 'Typography', 'Ethnic Motifs', 'Nature Inspired', 'Traditional Prints', 'Ikat', 'Paisley', 'Tribal', 'Warli', 'Kantha', 'Kalamkari', 'Batik', 'Bandhani'
        ],
        sleeveLengths: [
            'Sleeveless', 'Cap Sleeves', 'Short Sleeves', 'Elbow Sleeves', '3/4th Sleeves', 'Full Sleeves', 'Roll-Up Sleeves', 'Cold Shoulder'
        ],
        sleeveStylings: [
            'Drop-Shoulder', 'Regular Sleeves', 'Ruffled Sleeves', 'Bell Sleeves', 'Bishop Sleeves', 'Batwing Sleeves', 'Flared Sleeves', 'Puff Sleeves', 'Kimono Sleeves', 'Raglan Sleeves', 'Slit Sleeves'
        ],
        washCares: [
            'Machine Wash', 'Hand Wash', 'Dry Clean Only', 'Do Not Iron', 'Gentle Wash', 'Do Not Bleach'
        ],
        weaveTypes: [
            'Woven', 'Knitted', 'Handloom', 'Powerloom', 'Crochet', 'Chambray', 'Twill', 'Dobby', 'Jacquard', 'Denim', 'Poplin'
        ],
        transparencies: [
            'Opaque', 'Semi-Sheer', 'Sheer'
        ],
        surfaceStylings: [
            'Embellished', 'Sequinned', 'Beaded', 'Ruffled', 'Lace'
        ],
        closureTypes: [
            'Button', 'Zip', 'Slip-On', 'Hook & Eye', 'Drawstring', 'Tie-Up'
        ],
        linings: [
            'Yes', 'No', 'Partial'
        ],
        selected: {
            fabric: '',
            fashionTrend: '',
            fit: '',
            length: '',
            multipack: '',
            neckType: '',
            numItems: '',
            occasion: '',
            packageContains: '',
            pattern: '',
            printPatternType: '',
            sleeveLength: '',
            sleeveStyling: '',
            washCare: '',
            weaveType: '',
            transparency: '',
            surfaceStyling: '',
            closureType: '',
            lining: ''
        }
    }
}
</script>
</section>
